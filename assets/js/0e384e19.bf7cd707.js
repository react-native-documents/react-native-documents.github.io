"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{1512:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var o=i(4848),s=i(8453);const t={sidebar_position:0},r="Introduction",a={id:"intro",title:"Introduction",description:"Welcome to the documentation for @react-native-documents/picker and @react-native-documents/viewer packages available to sponsors. These packages provide a way to pick and view documents on the device's file system or remote locations.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"guidesSidebar",next:{title:"Installation",permalink:"/docs/install"}},d={},c=[{value:"What&#39;s new in the sponsor-only packages?",id:"whats-new-in-the-sponsor-only-packages",level:2},{value:"TypeScript",id:"typescript",level:3},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Windows",id:"windows",level:3},{value:"How do I know it works?",id:"how-do-i-know-it-works",level:3},{value:"Why do I ask for sponsorship?",id:"why-do-i-ask-for-sponsorship",level:2},{value:"Migrating from the old package",id:"migrating-from-the-old-package",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2}];function l(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(n.p,{children:["Welcome to the documentation for ",(0,o.jsx)(n.code,{children:"@react-native-documents/picker"})," and ",(0,o.jsx)(n.code,{children:"@react-native-documents/viewer"})," packages available to ",(0,o.jsx)(n.a,{href:"/docs/install",children:"sponsors"}),". These packages provide a way to pick and view documents on the device's file system or remote locations."]}),"\n",(0,o.jsx)(n.h2,{id:"whats-new-in-the-sponsor-only-packages",children:"What's new in the sponsor-only packages?"}),"\n",(0,o.jsxs)(n.p,{children:["Firstly, there's the completely new ",(0,o.jsx)(n.code,{children:"@react-native-documents/viewer"})," package which is designed to work well together with the updated ",(0,o.jsx)(n.code,{children:"@react-native-documents/picker"}),". The updated Picker module has an api very similar to the ",(0,o.jsx)(n.a,{href:"https://github.com/rnmods/react-native-document-picker",children:"original"}),", and contains the following improvements:"]}),"\n",(0,o.jsx)(n.h3,{id:"typescript",children:"TypeScript"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["highly improved type definitions that make use of ",(0,o.jsx)(n.a,{href:"https://basarat.gitbook.io/typescript/type-system/discriminated-unions",children:"Discriminated Unions"})," and other goodies so that you don't try to read fields that are not there. Works great with ",(0,o.jsx)(n.code,{children:"strict: true"})," and ",(0,o.jsx)(n.code,{children:"noUncheckedIndexedAccess: true"})," in your ",(0,o.jsx)(n.code,{children:"tsconfig"})," (But these settings are not required! You can use vanilla JS too if you like.)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/docs/jest-mocks",children:"mocks"})," for testing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"pickSingle"})," method was removed. You can instead use ",(0,o.jsx)(n.code,{children:"const [result] = pick()"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"releaseSecureAccess"})," was removed. I believe it's not necessary anymore because both the picker and the viewer module handle access in a way that does not require manual secure access management. Please open an issue if you need this method back."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"ios",children:"iOS"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["new: ",(0,o.jsx)(n.a,{href:"/docs/picker/limiting-selectable-files#isknowntype",children:(0,o.jsx)(n.code,{children:"isKnownType"})})," utility"]}),"\n",(0,o.jsxs)(n.li,{children:["new: support for long-term file access permissions - across app and even device reboots! (",(0,o.jsx)(n.a,{href:"/docs/picker/open-mode",children:(0,o.jsx)(n.code,{children:"requestLongTermAccess"})}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["new: ",(0,o.jsx)(n.a,{href:"/docs/picker/import-mode#keepLocalCopy",children:(0,o.jsx)(n.code,{children:"keepLocalCopy"})})," function that separates picking a file and copying it to a local directory. This makes your app more responsive: previously you'd use the ",(0,o.jsx)(n.code,{children:"copyTo"})," option and before the resulting ",(0,o.jsx)(n.code,{children:"Promise"})," resolved, you needed to wait not only for user to pick the file, but also for the file to be copied to your app's directory. For large files or with slow network, this could be a problem that you, as a dev don't see, but your users do."]}),"\n",(0,o.jsx)(n.li,{children:"improved: the majority of the code is now written in Swift. The code is more readable and safer."}),"\n",(0,o.jsxs)(n.li,{children:["improved: all the code on iOS would previously run on the main thread. Now, the suitable parts are handled on a background thread or using Swift's ",(0,o.jsx)(n.a,{href:"https://www.hackingwithswift.com/swift/5.5/async-await",children:"concurrency methods"}),". You don't want to do file I/O on the main thread."]}),"\n",(0,o.jsxs)(n.li,{children:["improved: using the new ",(0,o.jsx)(n.code,{children:"UIDocumentPickerViewController"})," apis instead of those deprecated in iOS 14"]}),"\n",(0,o.jsxs)(n.li,{children:["improved: instead of the old ",(0,o.jsx)(n.code,{children:"copyTo"})," parameter making unnecessary copies, the new ",(0,o.jsx)(n.code,{children:"keepLocalCopy"})," function just moves the imported file."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["new: support for ",(0,o.jsx)(n.a,{href:"/docs/picker/open-mode",children:"open mode"})]}),"\n",(0,o.jsxs)(n.li,{children:["new: support for ",(0,o.jsx)(n.a,{href:"/docs/picker/virtual-files",children:"virtual files"})]}),"\n",(0,o.jsxs)(n.li,{children:["new: support for long-term file access permissions - across app and even device reboots! (",(0,o.jsx)(n.a,{href:"/docs/picker/open-mode",children:(0,o.jsx)(n.code,{children:"requestLongTermAccess"})}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["new: ",(0,o.jsx)(n.a,{href:"/docs/picker/import-mode#keepLocalCopy",children:(0,o.jsx)(n.code,{children:"keepLocalCopy"})})," function that separates picking a file and copying it to a local directory. This makes your app more responsive: previously you'd use the ",(0,o.jsx)(n.code,{children:"copyTo"})," option and before the resulting ",(0,o.jsx)(n.code,{children:"Promise"})," resolved, you needed to wait not only for user to pick the file, but also for the file to be copied to your app's directory. For large files or with slow network, this could be a problem that you, as a dev don't see, but your users do."]}),"\n",(0,o.jsx)(n.li,{children:"improved: replaced the Java code with Kotlin and made it cleaner"}),"\n",(0,o.jsxs)(n.li,{children:["improved: I have removed the deprecated ",(0,o.jsx)(n.a,{href:"https://developer.android.com/reference/android/os/AsyncTask",children:"AsyncTask"})," usage and replaced it with Kotlin Coroutines."]}),"\n",(0,o.jsxs)(n.li,{children:["improved: the code is better at operating with I/O, for example ",(0,o.jsx)(n.a,{href:"https://github.com/rnmods/react-native-document-picker/blob/27fddb9d9a88fff09a41ce654f7008cfd33cb4c4/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java#L337",children:"byte buffer use"})," is replaced with a potentially much more efficient alternative from ",(0,o.jsx)(n.code,{children:"java.nio"})]}),"\n",(0,o.jsxs)(n.li,{children:["improved: reading file metadata is more defensive and efficient because only the necessary columns are queried from ",(0,o.jsx)(n.a,{href:"https://developer.android.com/reference/android/content/ContentResolver#query(android.net.Uri,%20java.lang.String%5B%5D,%20android.os.Bundle,%20android.os.CancellationSignal)",children:"ContentResolver"}),". The native Android apis are full of calls that can return null or throw so extra care is taken to handle these cases."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,o.jsx)(n.p,{children:"Windows is not supported at the moment. While there is Windows-related code in the public module, it's not maintained. If you are interested in Windows support, please let me know!"}),"\n",(0,o.jsx)(n.h3,{id:"how-do-i-know-it-works",children:"How do I know it works?"}),"\n",(0,o.jsx)(n.p,{children:"With so many changes, you might wonder if the new package is stable - especially with Android because... well, we know Android \ud83d\ude1c."}),"\n",(0,o.jsx)(n.p,{children:"To prove the new code is solid, I have written an e2e test suite that covers the majority of the features:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"import mode"}),"\n",(0,o.jsx)(n.li,{children:"open mode"}),"\n",(0,o.jsx)(n.li,{children:"viewing files, including long-term permissions"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The test suite focuses on Android, and was executed on real devices from Samsung, Google and Huawei, with Android versions ranging between 8 and 14. iOS tests were done manually on a real device with iOS 17."}),"\n",(0,o.jsx)(n.p,{children:"As a result, I have greater confidence in the new package than in the old one!"}),"\n",(0,o.jsx)(n.h2,{id:"why-do-i-ask-for-sponsorship",children:"Why do I ask for sponsorship?"}),"\n",(0,o.jsxs)(n.p,{children:["I (",(0,o.jsx)(n.a,{href:"https://github.com/vonovak",children:"vonovak"}),") have been maintaining the original ",(0,o.jsx)(n.a,{href:"https://github.com/rnmods/react-native-document-picker",children:(0,o.jsx)(n.code,{children:"react-native-document-picker"})})," package more or less since 2020. The package has been used by thousands of devs, but I could see that it had a lot of issues. The codebase was old and there was a lot to improve."]}),"\n",(0,o.jsxs)(n.p,{children:["on Nov 26, 2022 I opened an ",(0,o.jsx)(n.a,{href:"https://github.com/rnmods/react-native-document-picker/issues/603",children:"issue"})," on the original package:"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Hello,\nI'm the module maintainer and I'm looking for sponsors who would be willing to help fund migrating to new architecture and bringing new improvements to the module:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"removal of deprecated apis"}),"\n",(0,o.jsx)(n.li,{children:"improvements to the module api"}),"\n",(0,o.jsx)(n.li,{children:"bugs like #606"}),"\n",(0,o.jsx)(n.li,{children:"If interested, please see my GH sponsors."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Thank you! \u2764\ufe0f"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["But I received very little support for this task - and I understand: why would a company or an individual spend money if they get ",(0,o.jsx)(n.strong,{children:"nothing but a vague promise in return"}),"? If you follow me on ",(0,o.jsx)(n.a,{href:"https://twitter.com/vonovak",children:"Twitter"}),", you know I occasionally rant about open source (un)sustainability."]}),"\n",(0,o.jsxs)(n.p,{children:["In January 2024 I decided to rewrite the package from scratch and make it better! The new package has a new name: ",(0,o.jsx)(n.code,{children:"@react-native-documents/picker"})," and is hosted on the ",(0,o.jsx)(n.a,{href:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-npm-registry",children:"Github packages npm registry"})," - not the ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/",children:"public npm registry"}),", and it is available to ",(0,o.jsx)(n.a,{href:"/docs/install",children:"sponsors"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["While I was at it, I also created a new ",(0,o.jsx)(n.code,{children:"viewer"})," package which is available to ",(0,o.jsx)(n.a,{href:"/docs/install",children:"sponsors"})," as well."]}),"\n",(0,o.jsx)(n.p,{children:"So how to make OSS sustainable? My take is this: rather than asking for support, I provide a full-featured package and ask for a fee in return. I believe that the new packages are worth it."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["I'd like to thank my long-term GitHub sponsors ",(0,o.jsx)(n.a,{href:"https://www.litentry.com/",children:"Litentry"}),", ",(0,o.jsx)(n.a,{href:"https://www.callstack.com/",children:"Callstack"})," and ",(0,o.jsx)(n.a,{href:"https://expo.dev/",children:"Expo"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"migrating-from-the-old-package",children:"Migrating from the old package"}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/docs/migration",children:"the migration guide"})," - it's not difficult!"]}),"\n",(0,o.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"/docs/install#requirements",children:"installation"})," page for the pre-requisites."]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"The library works with native apis (document picker, file system, etc.) which are, in some cases, fundamentally different across platforms. We will point out platform-specific details as necessary."})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var o=i(6540);const s={},t=o.createContext(s);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);