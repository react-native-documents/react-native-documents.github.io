"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[59],{8350:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var o=n(4848),t=n(8453);const l={},r="Virtual files",s={id:"sponsor-only/picker/virtual-files",title:"Virtual files",description:"Virtual files are an Android-only concept. You have almost surely encountered them in your Google Drive - all the Google Docs, Sheets, Presentations and etc. are virtual files and cannot normally be selected.",source:"@site/docs/sponsor-only/picker/virtual-files.md",sourceDirName:"sponsor-only/picker",slug:"/sponsor-only/picker/virtual-files",permalink:"/docs/sponsor-only/picker/virtual-files",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"guidesSidebar",previous:{title:"Directory Picker",permalink:"/docs/sponsor-only/picker/directory-picker"},next:{title:"Document Viewer",permalink:"/docs/sponsor-only/viewer"}},a={},c=[{value:"Obtaining regular file from a virtual file",id:"obtaining-regular-file-from-a-virtual-file",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h1,{id:"virtual-files",children:"Virtual files"}),"\n",(0,o.jsx)(i.p,{children:"Virtual files are an Android-only concept. You have almost surely encountered them in your Google Drive - all the Google Docs, Sheets, Presentations and etc. are virtual files and cannot normally be selected."}),"\n",(0,o.jsx)(i.admonition,{type:"note",children:(0,o.jsx)(i.p,{children:"Picking virtual files is supported on Android 7.0 and above."})}),"\n",(0,o.jsxs)(i.p,{children:["Pass ",(0,o.jsx)(i.code,{children:"allowVirtualFiles: true"})," to the ",(0,o.jsx)(i.code,{children:"pick"})," function to allow picking virtual files in both modes."]}),"\n",(0,o.jsxs)(i.p,{children:["When a virtual file is picked, the ",(0,o.jsx)(i.code,{children:"isVirtual"})," field is ",(0,o.jsx)(i.code,{children:"true"}),", and the ",(0,o.jsx)(i.code,{children:"convertibleToMimeTypes"})," field contains an array of ",(0,o.jsx)(i.a,{href:"/docs/doc-picker-api#virtualfilemeta",children:(0,o.jsx)(i.code,{children:"VirtualFileMeta"})}),"."]}),"\n",(0,o.jsxs)(i.p,{children:["This array describes what kind(s) of regular file the virtual file can be exported into - for example, Google docs files can be exported as ",(0,o.jsx)(i.code,{children:"application/pdf"})," and so the array will be ",(0,o.jsx)(i.code,{children:"[{ mimeType: 'application/pdf', extension: 'pdf' }]"}),"."]}),"\n",(0,o.jsx)(i.h2,{id:"obtaining-regular-file-from-a-virtual-file",children:"Obtaining regular file from a virtual file"}),"\n",(0,o.jsxs)(i.p,{children:["If you want to export a virtual file into a local file, use the ",(0,o.jsx)(i.a,{href:"/docs/sponsor-only/picker/import-mode#keepLocalCopy",children:(0,o.jsx)(i.code,{children:"keepLocalCopy"})})," function and"]}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:["double-check that the ",(0,o.jsx)(i.code,{children:"fileName"})," parameter includes the extension."]}),"\n",(0,o.jsxs)(i.li,{children:["pass a ",(0,o.jsx)(i.code,{children:"mimeType"})," value to the ",(0,o.jsx)(i.code,{children:"convertVirtualFileToType"})," parameter."]}),"\n"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-tsx",metastring:'title="Example.tsx"',children:"<Button\n  title=\"import virtual file (such as a document from GDrive)\"\n  onPress={async () => {\n    const [file] = await pick({\n      allowVirtualFiles: true,\n    })\n    const { name, uri: pickedUri, convertibleToMimeTypes } = file\n\n    const virtualFileMeta = convertibleToMimeTypes && convertibleToMimeTypes[0]\n    invariant(name && virtualFileMeta, 'name and virtualFileMeta is required')\n    const [copyResult] = await keepLocalCopy({\n      files: [\n        {\n          uri: pickedUri,\n          fileName: `${name}.${virtualFileMeta.extension ?? ''}`,\n          convertVirtualFileToType: virtualFileMeta.mimeType,\n        },\n      ],\n      destination: 'cachesDirectory',\n    })\n    if (copyResult.status === 'success') {\n      const localCopy = copyResult.localUri\n      // do something with the local copy\n    }\n  }}\n/>\n"})}),"\n",(0,o.jsxs)(i.p,{children:["For viewing or editing of virtual files you'll need to rely on the app that provided the virtual file (for example, Google Docs app for Google Docs files). The ",(0,o.jsx)(i.a,{href:"/docs/sponsor-only/viewer",children:"Document Viewer"})," module can help you with that."]}),"\n",(0,o.jsxs)(i.p,{children:["Learn more about virtual files in ",(0,o.jsx)(i.a,{href:"https://www.youtube.com/watch?v=4h7yCZt231Y",children:"this video"}),"."]})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>s});var o=n(6540);const t={},l=o.createContext(t);function r(e){const i=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(l.Provider,{value:i},e.children)}}}]);